name: Kekik Flet Derlemesi

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform      : linux
            os            : ubuntu-latest
            build_command : "flet build linux -v"
            output_dir    : "build/linux"
            artifact_name : "linux-build.7z"

          - platform      : windows
            os            : windows-latest
            build_command : "flet build windows -v"
            output_dir    : "build/windows"
            artifact_name : "windows-build.7z"

          - platform      : android
            os            : ubuntu-latest
            build_command : "flet build apk -v"
            output_dir    : "build/apk"
            artifact_name : "android-build.7z"

          - platform      : ipa
            os            : macos-latest
            build_command : "flet build ipa -v"
            output_dir    : "build/ipa"
            artifact_name : "ipa-build.7z"

    steps:
      - name: 🚀 Repository’yi Kopyala
        uses: actions/checkout@v4.2.2

      - name: 🛠️ Python 3.11.8 Yükle
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.11.8

      - name: 📦 Gereksinimleri Yükle
        run : |
          python -m pip install --upgrade pip
          pip install -Ur requirements.txt

      - name: Linux Build Dependencies (sadece Linux için)
        if  : matrix.platform == 'linux'
        run : |
          sudo apt update -qq
          sudo apt install -y ninja-build libgtk-3-dev build-essential

      - name : 🔨 Projeyi Derle
        env  :
          PYTHONIOENCODING: utf-8
        run  : ${{ matrix.build_command }}

      - name : 📦 Çıktıları Sıkıştır
        run  : |
          cd ${{ matrix.output_dir }}
          7z a -mx9 ../../${{ matrix.artifact_name }} *

      - name: 📤 Artifact Yükle
        uses: actions/upload-artifact@v4.6.1
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    needs   : build
    runs-on : ubuntu-latest
    steps   :
      - name: 🚀 Repository’yi Kopyala
        uses: actions/checkout@v4.2.2

      - name : 🏷️ Versiyon Numarası Al
        id   : version
        shell: bash
        run  : |
          VERSION=$(TZ="Europe/Istanbul" date +"%d.%m.%Y-%H:%M:%S")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: 📥 Artifact'leri İndir
        uses: actions/download-artifact@v4.1.8
        with:
          path: artifacts

      - name: 🔥 Mevcut "latest" Release ve Tag'i Sil
        run : |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/tags/latest" | jq -r .id)

          if [[ "$RELEASE_ID" != "null" ]]; then
            echo "Mevcut release ($RELEASE_ID) siliniyor..."
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/$RELEASE_ID"

            echo "Tag 'latest' siliniyor..."
            git push --delete origin latest || true
          else
            echo "Mevcut release bulunamadı, devam ediliyor..."
          fi

      - name: 📤 Yeni Release Oluştur
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name   : latest
          name       : "Güncel Sürüm"
          body       : "${{ env.VERSION }} - ${{ github.sha }} için otomatik oluşturulan sürüm."
          draft      : false
          prerelease : false
          files      : artifacts/**